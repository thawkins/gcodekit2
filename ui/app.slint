//! Application main window and layout
//!
//! Main entry point for the GCodeKit2 UI application with modular components.

import { ThemeProvider } from "theme/mod.slint";
import { InteractiveButton } from "widgets/interactive-button.slint";
import { MenuBar } from "widgets/menu-bar.slint";
import { StatusBar } from "widgets/status-bar.slint";
import { LeftPanel } from "panels/left-panel.slint";
import { CenterPanel } from "panels/center-panel.slint";
import { RightPanel } from "panels/right-panel.slint";

export component AppWindow inherits Window {
    preferred-width: 1200px;
    preferred-height: 800px;
    title: "GCodeKit2 - GRBL Control v0.2.0-alpha";
    
    // Connection callbacks
    callback refresh-ports();
    callback connect(string);
    callback disconnect();
    
    // Console callbacks
    callback send-command(string);
    callback clear-console();
    callback copy-console();
    callback save-console();
    callback toggle-info(bool);
    callback toggle-debug(bool);
    callback toggle-warn(bool);
    callback toggle-error(bool);
    callback toggle-trace(bool);
    callback toggle-other(bool);
    
    // Connection state properties
    in property <[string]> available-ports;
    in property <string> selected-port;
    in property <bool> is-connected;
    in property <string> connection-status: "Disconnected";
    in property <string> baud-rate: "115200";
    
    // Console state properties
    in property <string> console-content: "[System] Console Ready";
    in property <bool> show-info: true;
    in property <bool> show-debug: true;
    in property <bool> show-warn: true;
    in property <bool> show-error: true;
    in property <bool> show-trace: false;
    in property <bool> show-other: true;
    
    MenuBar {
        y: 0px;
        width: 100%;
        height: 50px;
        settings_requested => {
            // TODO: Show settings panel
        }
    }
    
    LeftPanel {
        x: 0px;
        y: 50px;
        width: 250px;
        height: root.height - 87.5px;
        available-ports: root.available-ports;
        selected-port: root.selected-port;
        is-connected: root.is-connected;
        connection-status: root.connection-status;
        baud-rate: root.baud-rate;
        refresh-ports => { root.refresh-ports(); }
        connect(port) => { root.connect(port); }
        disconnect => { root.disconnect(); }
    }
    
    CenterPanel {
        x: 250px;
        y: 50px;
        width: root.width - 510px;
        height: root.height - 87.5px;
        console-content: root.console-content;
        show-info: root.show-info;
        show-debug: root.show-debug;
        show-warn: root.show-warn;
        show-error: root.show-error;
        show-trace: root.show-trace;
        show-other: root.show-other;
        send-command(cmd) => { root.send-command(cmd); }
        clear-console => { root.clear-console(); }
        copy-console => { root.copy-console(); }
        save-console => { root.save-console(); }
        toggle-info(val) => { root.toggle-info(val); }
        toggle-debug(val) => { root.toggle-debug(val); }
        toggle-warn(val) => { root.toggle-warn(val); }
        toggle-error(val) => { root.toggle-error(val); }
        toggle-trace(val) => { root.toggle-trace(val); }
        toggle-other(val) => { root.toggle-other(val); }
    }
    
    RightPanel {
        x: root.width - 260px;
        y: 50px;
        width: 250px;
        height: root.height - 87.5px;
    }
    
    Rectangle {
        x: root.width - 10px;
        y: 50px;
        width: 10px;
        height: root.height - 87.5px;
        background: ThemeProvider.colors.background;
    }
    
    StatusBar {
        y: root.height - 37.5px;
        width: 100%;
        height: 37.5px;
        is-connected: root.is-connected;
        connection-status: root.connection-status;
    }
}
